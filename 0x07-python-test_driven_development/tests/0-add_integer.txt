# run this test using ``python3 -m doctest -v ./tests/0-add_integer.txt``

First import modules to test
============================

>>> add_integer = __import__('0-add_integer').add_interger

SUCCESS CASES:
=============

test signed and unsigned cases

>>> print(add_integer(1, 2))
>>> 3
>>> print(add_integer(-1, 2))
>>> 1
>>> print(add_integer(1.5, 2.9))
>>> 3
>>> print(add_integer(-2.9, 1))
>>> -1


to test for default b=98 value
::
>>> print(add_integer(1))
>>> 99

FAIL CASES:
===========

Test no arguments
>>> print(add_integer(None))
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> print(add_integer(None, None))
Traceback (most recent call last):
...
TypeError: a must be an integer

Testing Extra Arguments
>>> print(add_integer(1, 2, 3))
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Test other data types
::
     >>> print(add_integer("hey"))
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
     >>> print(add_integer(0, [1, 2, 3]))
     Traceback (most recent call last):
     ...
     TypeError: b must be an integer

Test max/min numbers Python can handle ("inf" is infinity)
::
     >>> print(add_integer(float("inf")))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer
     >>> print(add_integer(float("-inf")))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer

Test special float NaN in Python (not a number)
::
     >>> print(add_integer(float("NaN")))
     Traceback (most recent call last):
     ...
     ValueError: cannot convert float NaN to integer
 
